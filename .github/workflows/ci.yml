name: Cowsay SI CI

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build \
            --tag cowsay-si:ci \
            --file ./Dockerfile \
            .

      - name: Start container
        id: start
        run: |
          CONTAINER_ID=$(docker run -d -p 8080:8080 cowsay-si:ci 8080)
          echo "::set-output name=id::$CONTAINER_ID"

      - name: Wait for server
        run: sleep 5

      - name: Smoke-test endpoint
        run: |
          curl --fail --silent "http://localhost:8080/Hello%20from%20GitHub%20Actions!" \
            > response.txt

      - name: Stop container
        run: docker kill ${{ steps.start.outputs.id }}

      - name: Verify output
        run: |
          grep -q "Hello from GitHub Actions!" response.txt

publish:
  name: Publish Docker Image
  runs-on: ubuntu-latest
  needs: build-and-test

  steps:
    # 1) Checkout code so Dockerfile and all sources exist
    - name: Checkout repo
      uses: actions/checkout@v4

    # 2) Re-build the image now that the files are present
    - name: Build Docker image (again)
      run: |
        docker build \
          --tag cowsay-si:ci \
          --file ./Dockerfile \
          .

    # 3) Log in, tag, push, etc...
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Tag image
      run: |
        docker tag cowsay-si:ci \
          ${{ secrets.DOCKERHUB_USERNAME }}/cowsay-si:latest

    - name: Push to Docker Hub
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/cowsay-si:latest

    - name: Pull & verify
      run: |
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cowsay-si:latest
